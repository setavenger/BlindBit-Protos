syntax = "proto3";

import "google/protobuf/timestamp.proto";

package ipc;

option go_package = "./pb";

// The greeting service definition.
service IpcService {
  // Alive pings the daemon and returns true if the daemon is alive
  rpc Status (Empty) returns (StatusResponse);
  rpc SyncHeight (Empty) returns (SyncHeightResponse);
  rpc Unlock (PasswordRequest) returns (BoolResponse);
  rpc SetPassword (PasswordRequest) returns (BoolResponse); // todo change to change password
  rpc Shutdown (Empty) returns (BoolResponse);
  rpc ListUTXOs(Empty) returns (UTXOCollection); // todo add utxo state filter
  rpc ListAddresses(Empty) returns (AddressesCollection);
  rpc CreateNewLabel(NewLabelRequest) returns (Address);
  rpc CreateTransaction(CreateTransactionRequest) returns (RawTransaction);
  rpc CreateTransactionAndBroadcast(CreateTransactionRequest) returns (NewTransaction);
  rpc GetMnemonic(Empty) returns (Mnemonic);
  rpc SetMnemonic(Mnemonic) returns (BoolResponse);
  rpc CreateNewWallet(NewWalletRequest) returns (Mnemonic);
  rpc ForceRescanFromHeight(RescanRequest) returns (BoolResponse);
}

enum Status {
  STATUS_UNSPECIFIED = 0;
  STATUS_STARTING = 1;
  STATUS_LOCKED = 2;
  STATUS_RUNNING = 3;
  STATUS_SCANNING = 4;
  STATUS_SHUTTING_DOWN = 5;
}

enum UTXOState {
  UNKNOWN = 0;
  UNCONFIRMED = 1;
  UNSPENT = 2;
  SPENT = 3;
  SPENT_UNCONFIRMED = 4;
}

// This is an empty message
message Empty {}

// The response message containing the greetings
message StatusResponse {
  Status status = 1;
}

message UTXOCollection {
  repeated OwnedUTXO utxos = 1;  // Array of OwnedUTXO
}

message PasswordRequest {
  string password = 1;
}

message BoolResponse {
  bool success = 1;
  string error = 2;  // only filled if success false
}

message OwnedUTXO {
  bytes txid = 1;
  uint32 vout = 2;
  uint64 amount = 3;
  bytes pub_key = 4;
  google.protobuf.Timestamp timestamp_confirmed = 5;
  UTXOState utxo_state = 6;
  optional string label = 7;
}

message CreateTransactionRequest {
  repeated TransactionRecipient recipients = 1;
  int64 feeRate = 2;
}

message TransactionRecipient {
  string address = 1;
  uint64 amount = 2;
  string annotation = 3;
}

message RawTransaction {
  bytes raw_tx = 1;
}

message NewTransaction {
  string txid = 1;
}

message AddressesCollection {
  repeated Address addresses = 1;
}

message Address {
  string address = 1;
  string comment = 2;
}

message NewLabelRequest {
  string comment = 1;
}

message SyncHeightResponse {
  uint64 height = 1;
}

message Mnemonic {
  string mnemonic = 1;
}

message NewWalletRequest {
  string encryptionPassword = 1; // encryptionPassword encrypts the wallet data on disk
  string seedPassphrase = 2; // passphrase is added to the seed
}

message RescanRequest {
  uint64 height = 1;
}
